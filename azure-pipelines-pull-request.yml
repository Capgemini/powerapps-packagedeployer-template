name: $(GITVERSION_FullSemVer)

trigger: none

pr:
  - master

pool:
  vmImage: windows-latest

variables:
  - name: Environment.Identifier
    value: $[ coalesce(variables['System.PullRequest.PullRequestNumber'], variables['Build.BuildId']) ]
  - name: TestEnvironment.DomainName
    value: pdt-pr-$(Environment.Identifier)
  - group: Dataverse users

stages:
  - stage: ProvisionEnvironment
    displayName: Provision environment
    jobs:
      - job: ProvisionEnvironmentJob
        displayName: Provision environment
        steps:
          - task: PowerPlatformToolInstaller@0
            displayName: Install Power Platform Build Tools
            inputs:
              DefaultVersion: true
          - task: PowerPlatformCreateEnvironment@0
            displayName: Create environment
            inputs:
              authenticationType: PowerPlatformSPN
              PowerPlatformSPN: Dataverse (placeholder)
              DisplayName: Package Deployer Template - PR $(Environment.Identifier)
              EnvironmentSku: Sandbox
              LocationName: unitedkingdom
              LanguageName: 1033
              CurrencyName: GBP
              DomainName: $(TestEnvironment.DomainName)
          - powershell: |
              echo "##vso[task.setvariable variable=EnvironmentUrl;isOutput=true]$env:BUILDTOOLS_ENVIRONMENTURL"
              echo "##vso[task.setvariable variable=EnvironmentName;isOutput=true]$env:BUILDTOOLS_ENVIRONMENTID"
            displayName: Set output variables
            name: SetEnvironmentOutputVariables  
  - stage: BuildAndTest
    displayName: Build and Test
    dependsOn: ProvisionEnvironment
    variables:
      BuildTools.EnvironmentUrl: $[ stageDependencies.ProvisionEnvironment.ProvisionEnvironmentJob.outputs['SetEnvironmentOutputVariables.EnvironmentUrl'] ]
      BuildTools.EnvironmentId: $[ stageDependencies.ProvisionEnvironment.ProvisionEnvironmentJob.outputs['SetEnvironmentOutputVariables.EnvironmentName'] ]
    jobs:
      - template: templates/build-and-test-job.yml
        parameters:
          environmentUrl: $(BuildTools.EnvironmentUrl)
          environmentName: $(BuildTools.EnvironmentId)
          username: $(DataverseUsers.AzureDevOps.Username)
          password: $(DataverseUsers.AzureDevOps.Password)
  - stage: ManualValidation
    displayName: Manual validation
    dependsOn:
      - ProvisionEnvironment
      - BuildAndTest
    condition: and(not(canceled()), ne(variables['BuildTools.EnvironmentUrl'], ''))
    variables:
      BuildTools.EnvironmentUrl: $[ stageDependencies.ProvisionEnvironment.ProvisionEnvironmentJob.outputs['SetEnvironmentOutputVariables.EnvironmentUrl'] ]
    jobs:
      - job: ManualValidationJob
        displayName: Manual validation
        pool: server
        timeoutInMinutes: 8640
        steps:
          - task: ManualValidation@0
            displayName: Wait for manual validation
            timeoutInMinutes: 7200
            inputs:
              onTimeout: resume
              instructions: Please perform any checks required on $(BuildTools.EnvironmentUrl).
  - stage: DeleteEnvironment
    displayName: Delete environment
    dependsOn:
      - ProvisionEnvironment
      - ManualValidation
    variables:
      BuildTools.EnvironmentUrl: $[ stageDependencies.ProvisionEnvironment.ProvisionEnvironmentJob.outputs['SetEnvironmentOutputVariables.EnvironmentUrl'] ]
    jobs:
      - job: DeleteEnvironmentJob
        displayName: Delete environment
        condition: ne(variables['BuildTools.EnvironmentUrl'], '')
        steps:
          - checkout: none
          - task: PowerPlatformToolInstaller@0
            displayName: Install Power Platform Build Tools
            inputs:
              DefaultVersion: true
          - task: PowerPlatformDeleteEnvironment@0
            displayName: Delete environment
            continueOnError: true
            inputs:
              authenticationType: PowerPlatformSPN
              PowerPlatformSPN: Dataverse (placeholder)